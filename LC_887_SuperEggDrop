class Solution:
    def superEggDrop(self, k: int, n: int) -> int:
        if n==0: return 0
        if k==1: return n
        if k>floor(log(n,2)) : return floor(log(n,2))+1

        vals = [(pow(2,i)-1,i) for i in range(1,k+1)]

        found = False
        while not found:
            vals[0] = (vals[0][0]+1, vals[0][1]+1)
            for ii in range (1,k):
                vals[ii] = (vals[ii][0] + vals[ii-1][0] + 1, vals[ii][1] + 1)
            if vals[-1][0] >= n : found = True

        return vals[-1][1]
        
